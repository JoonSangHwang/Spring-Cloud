server.port = 8000

eureka.client.register-with-eureka = false
eureka.client.fetch-registry = false
eureka.client.service-url.defaultZone = http://localhost:8761/eureka

spring.application.name = api-gateway-service

# ======================================================================================================
# Property 로 Gateway 구현

# (1) 게이트웨이
spring.cloud.gateway.routes[0].id=first-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081/
spring.cloud.gateway.routes[0].predicates[0]=Path=/first-service/**

# (1) 게이트웨이 - Property 로 필터 적용
#spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=first-request,first-request-header2
#spring.cloud.gateway.routes[0].filters[1]=AddResponseHeader=first-response,first-response-header2

# (1) 게이트웨이 - Property 로 Custom 필터 적용
spring.cloud.gateway.routes[0].filters[0]=CustomFilter


# (2) 게이트웨이
spring.cloud.gateway.routes[1].id=second-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082/
spring.cloud.gateway.routes[1].predicates[0]=Path=/second-service/**

# (2) 게이트웨이 - Property 로 필터 적용
#spring.cloud.gateway.routes[1].filters[0]=AddRequestHeader=second-request,second-request-header2
#spring.cloud.gateway.routes[1].filters[1]=AddResponseHeader=second-response,second-response-header2

# (2) 게이트웨이 - Property 로 Custom 필터 적용
spring.cloud.gateway.routes[1].filters[0]=CustomFilter