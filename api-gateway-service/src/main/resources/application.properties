server.port = 8000

eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://localhost:8761/eureka

spring.application.name = api-gateway-service

# ======================================================================================================
# Property 로 Gateway 구현

# 게이트웨이 Global Filter 설정
spring.cloud.gateway.default-filters[0].name=GlobalFilter
spring.cloud.gateway.default-filters[0].args.baseMessage=Spring Cloud Gateway GlobalFilter
spring.cloud.gateway.default-filters[0].args.preLogger=true
spring.cloud.gateway.default-filters[0].args.postLogger=true


# (1) 게이트웨이
spring.cloud.gateway.routes[0].id=first-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8081/
spring.cloud.gateway.routes[0].uri=lb://my-first-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/first-service/**
# (1) 게이트웨이 - Filter 적용
#spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=first-request,first-request-header2
#spring.cloud.gateway.routes[0].filters[1]=AddResponseHeader=first-response,first-response-header2
# (1) 게이트웨이 - Custom Filter 적용
spring.cloud.gateway.routes[0].filters[0]=CustomFilter



# (2) 게이트웨이
spring.cloud.gateway.routes[1].id=second-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8082/
spring.cloud.gateway.routes[1].uri=lb://my-second-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/second-service/**
# (2) 게이트웨이 - Filter 적용
#spring.cloud.gateway.routes[1].filters[0]=AddRequestHeader=second-request,second-request-header2
#spring.cloud.gateway.routes[1].filters[1]=AddResponseHeader=second-response,second-response-header2
# (2) 게이트웨이 - Custom Filter 적용
spring.cloud.gateway.routes[1].filters[0].name=CustomFilter
# (2) 게이트웨이 - Logging Filter 적용
spring.cloud.gateway.routes[1].filters[1].name=LoggingFilter
spring.cloud.gateway.routes[1].filters[1].args.baseMessage=Hi there.
spring.cloud.gateway.routes[1].filters[1].args.preLogger=true
spring.cloud.gateway.routes[1].filters[1].args.postLogger=true



# (3) 게이트웨이 - User
spring.cloud.gateway.routes[2].id=user-service
spring.cloud.gateway.routes[2].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/user-service/**



# (4) 게이트웨이 - Catalog
spring.cloud.gateway.routes[3].id=catalogs-service
spring.cloud.gateway.routes[3].uri=lb://CATALOGS-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/catalogs-service/**


# (5) 게이트웨이 - Order
spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=lb://ORDER-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/order-service/**