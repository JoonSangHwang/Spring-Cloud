# 여러개의 인스턴스 기동을 위한 랜덤 포트 설정
server.port = 0

spring.application.name = user-service

# 라우팅 및 게이트웨이에서 인스턴스를 잡기 위해 id 부여
# 랜덤포트 사용 시, Eureka Server 에서 인스턴스를 구별할 수가 없다.
# 이유는 랜덤포트 사용시 Eureka Server 에 인스턴스는 설정파일에 기입된 port 번호가 정적으로 올라오기 때문에 구별이 어렵다
eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
eureka.client.register-with-eureka = true
eureka.client.fetch-registry = true
eureka.client.service-url.defaultZone = http://127.0.0.1:8761/eureka







# ===============================
greeting.message = Welcome to the Simple E-commerce.


spring.profiles.include=db



#############################################################################
#################################### JPA ####################################
#############################################################################
spring.jpa.hibernate.ddl-auto = create
#spring.properties.hibernate.show_sql = true                // System.out Log, 쓰지 않는걸 추천
spring.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments = true     // QueryDSL 은 JPQL 빌더 역할로 결국 JPQL 로 쿼리가 실행되니, 확인을 위해 설정



#############################################################################
#################################### log ####################################
#############################################################################
spring.logging.level.org.hibernate.SQL = debug      // Logger Log
spring.logging.level.org.hibernate.type = trace     // 데이터 바인딩 Log, 쓰지 않는걸 추천